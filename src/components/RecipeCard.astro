---
import { type RecipeCardProps } from '@/types/RecipeCard';

const { cuisine, id, image, nutritional_information, prep_time_minutes, rating, title } = Astro.props as RecipeCardProps;
---

<a
  class="bg-white  border  border-secondary-100  flex  flex-col  group  h-full  overflow-hidden  rounded-lg  transition  hover:border-secondary-200  hover:shadow-sm"
  href={`/recipes/${id}/`}
>
  {image &&
    <div class="aspect-square  bg-secondary-100  relative">
      <div class="overflow-hidden">
        <picture>
          <source
            srcset={`
              ${useRemoteImageUrl(image, { h: 288, output: 'webp', w: 288 })},
              ${useRemoteImageUrl(image, { h: 576, output: 'webp', w: 576 })} 2x
            `}
            type="image/webp"
          />
          <img
            alt={title}
            class="transition  w-full  group-hover:scale-110"
            decoding="async"
            height={288}
            loading="lazy"
            src={useRemoteImageUrl(image, { h: 288, w: 288 })}
            srcset={`${useRemoteImageUrl(image, { h: 576, w: 576 })} 2x`}
            width={288}
          />
        </picture>
      </div>
      {nutritional_information?.per_portion?.energy_kcal && (
        <div class="absolute  bg-white/90  flex  items-center  px-2  py-1.5  rounded-lg  space-x-2  start-2  text-sm  top-2">
          <Icon class="text-primary-600" name="user" />
          <span class="flex  items-center">{nutritional_information.per_portion.energy_kcal.toLocaleString()}kcal</span>
        </div>
      )}
      {isValidRating(rating) && (
        <div class="absolute  bg-white/90  end-2  flex  items-center  px-2  py-1.5  rounded-lg  space-x-2  text-sm  top-2">
          <Icon class="text-primary-600" name="star" /> <span>{rating.average.toFixed(1)}</span>
        </div>
      )}
    </div>
  }
  <div class="flex  flex-col  h-full  justify-between  p-4">
    <h2 class="font-medium  font-serif  mb-4  transition  group-hover:text-primary-600">{title}</h2>
    <div class="flex  items-center  justify-between  overflow-hidden  space-x-8  text-sm  text-center  group-hover:text-zinc-950">
      {prep_time_minutes['2'] && (
        <div class="flex  items-center  space-x-2">
          <Icon class="text-primary-600" name="stopwatch" /> <span>{prep_time_minutes['2']} mins</span>
        </div>
      )}
      {cuisine && (
        <div class="flex  items-center  space-x-2">
          <Icon class="text-primary-600" name="globe" /> <span>{cuisine}</span>
        </div>
      )}
    </div>
  </div>
</a>
