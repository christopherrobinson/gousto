---
import { type IngredientsProps } from '@/types/Ingredients';

const { basics, ingredients, portion_sizes } = Astro.props as IngredientsProps;
---

<div class="border  border-secondary-100  p-4  rounded-lg  text-sm">
  <h2 class="font-medium  font-serif  mb-2  text-xl">Ingredients for 2 people</h2>
  {(isPortionOffered(portion_sizes, 3) || isPortionOffered(portion_sizes, 4)) && (
    <p class="mb-4">
      {isPortionOffered(portion_sizes, 3) && (
        <span class="block"><span class="text-purple">Cooking for 3?</span> 1 and a half for each ingredient</span>
      )}
      {isPortionOffered(portion_sizes, 4) && (
        <span class="block"><span class="text-danger">Cooking for 4?</span> Double each ingredient</span>
      )}
    </p>
  ) || ``}
  <div class="mb-4  print:grid  print:grid-cols-3  print:w-full">
    {ingredients.map(({ allergens, label, image }) => (
      <div class="flex  items-center  space-x-4">
        <div class="flex  flex-col  items-center">
          {image &&
            <img alt={label} class="w-10" height={40} src={useRemoteImageUrl(image)} width={40} />
          ||
            <span class="bg-secondary-50  flex  items-center  justify-center  rounded-full  size-10  text-secondary-800/50">x</span>
          }
        </div>
        <div class="space-x-0.5">
          <span>{label}</span>
          {allergens.length > 0 && <strong class="font-normal">â€ </strong>}
        </div>
      </div>
    ))}
  </div>
  <h2 class="font-medium  font-serif  mb-2  text-xl">You'll also need</h2>
  <p>{basics.join(", ")} <span class="font-normal">(or dietary alternatives)</span></p>
</div>
