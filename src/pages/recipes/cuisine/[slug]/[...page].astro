---
import Container from '@/components/Container.astro';
import RecipeCard from '@/components/RecipeCard.astro';
import Pagination from '@/components/Helpers/Pagination.astro';
import Layout from '@/layouts/Default.astro';

const { slug, page } = Astro.params;
const { cuisine } = Astro.props;

const currentPage = Number(page);
const recipes = await getRecipes();
const taggedRecipes = recipes.filter(recipe => isRecipeCuisineMatch(recipe, slug));
const paginatedRecipes = paginate(taggedRecipes, { pageSize: recipesPerPage, currentPage });

const { data, totalPages } = paginatedRecipes;

export const getStaticPaths = async () => {
  const recipes = await getRecipes();
  const cuisines = await getUniqueCuisines();
  const paths = [];

  for (const cuisine of cuisines) {
    const taggedRecipes = recipes.filter(recipe => isRecipeCuisineMatch(recipe, cuisine));
    const totalPages = Math.ceil(taggedRecipes.length / recipesPerPage);

    for (let i = 2; i <= totalPages; i++) {
      paths.push({
        params: {
          page: i.toString(),
          slug: createSlug(cuisine),
        },
        props: { cuisine },
      });
    }
  }


  return paths;
};
---

<Layout heading={`${cuisine} Receipes${currentPage > 1 ? ` <small>(Page ${currentPage})</small>` : ``}`}>
  <Container>
    <div class="gap-4  grid  py-8  sm:gap-8  sm:grid-cols-2  md:grid-cols-3  lg:grid-cols-4">
      {data.map((recipe) => {
        const { data, id } = recipe
        const { cuisine, image, prep_times, title } = data;

        return (
          <RecipeCard
            cuisine={cuisine}
            id={id}
            image={image}
            prep_times={prep_times}
            title={title}
          />
        );
      })}
    </div>
  </Container>
  <Pagination
    baseUrl={`/recipes/cuisine/${slug}/`}
    currentUrl={slug}
    lastPage={totalPages}
    nextUrl={page < totalPages ? `/recipes/cuisine/${slug}/${currentPage + 1}/` : ``}
    prevUrl={`/recipes/cuisine/${slug}/${currentPage - 1 === 1 ? '' : `${currentPage - 1}/`}`}
  />
</Layout>
