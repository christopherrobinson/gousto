---
import FormattedDate from '@/components/Helpers/FormattedDate.astro';
import RecipeCard from '@/components/RecipeCard.astro';
import Layout from '@/layouts/Default.astro';

export const getStaticPaths = async () => {
  const posts = await getBlogPosts();

  return posts.map((post) => ({
    params: { slug: post.id },
    props: { post },
  }));
}

const { post } = Astro.props;
const { data } = post;
const { date, meta, title } = data;
const recipes = (data.recipes?.length > 0) ? await getRecipes({ recipes: data.recipes }) : [];
const { Content } = await render(post);
---

<Layout heading={title} meta={meta}>
  <Container>
    <div class="max-w-none  prose  py-4  lg:py-8">
      <p>Posted: <FormattedDate date={date} /></p>
      <Content />
    </div>
  </Container>
  {(recipes?.length > 0) &&
    <div class="bg-secondary-50  border-t  border-secondary-100  py-8  relative  md:py-16">
      <Container class="space-y-4  lg:space-y-8">
        <h2 class="font-light  font-serif  text-2xl  lg:text-3xl">Featured recipes</h2>
        <div class="gap-4  grid  xs:grid-cols-2  md:grid-cols-3  lg:grid-cols-4  lg:gap-8  xl:grid-cols-5">
          {recipes.map(({ data: { cuisine, image, nutritional_information, prep_times, rating, title }, id}) => (
            <div>
              <RecipeCard
                cuisine={cuisine}
                id={id}
                image={image}
                nutritional_information={nutritional_information}
                prep_times={prep_times}
                rating={rating}
                title={title}
              />
            </div>
          ))}
        </div>
      </Container>
    </div>

  }
</Layout>
